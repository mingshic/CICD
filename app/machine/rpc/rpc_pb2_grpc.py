# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import rpc_pb2 as rpc__pb2


class RPCStub(object):
  """定义接口
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.sendConfFile = channel.unary_unary(
        '/rpc.RPC/sendConfFile',
        request_serializer=rpc__pb2.Content.SerializeToString,
        response_deserializer=rpc__pb2.Status.FromString,
        )


class RPCServicer(object):
  """定义接口
  """

  def sendConfFile(self, request, context):
    """相当于定义接口方法 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'sendConfFile': grpc.unary_unary_rpc_method_handler(
          servicer.sendConfFile,
          request_deserializer=rpc__pb2.Content.FromString,
          response_serializer=rpc__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.RPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
